<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.itcast.dao.UserDao">

<!--    <resultMap id="userMap" type="cn.itcast.domain.User">-->
<!--        <id property="id" column="id"></id>-->
<!--        <result property="sex" column="sex"></result>-->
<!--        <result property="address" column="address"></result>-->
<!--        <result property="birthday" column="birthday"></result>-->
<!--        <result property="username" column="username"></result>-->
<!--    </resultMap>-->

    <resultMap id="userAccountMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="birthday" column="birthday"></result>
        <result property="sex" column="sex"></result>
        
        <collection property="accounts" ofType="account">
            <id column="id" property="id"></id>
            <result column="uid" property="uid"></result>
            <result column="money" property="money"></result>
        </collection>
    </resultMap>

    <resultMap id="userMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="birthday" column="birthday"></result>
        <result property="sex" column="sex"></result>

        <collection property="roles" ofType="role">
            <id property="id" column="rid"></id>
            <result property="role_name" column="role_name"></result>
            <result property="role_desc" column="role_desc"></result>
        </collection>
    </resultMap>

    <select id="findAll"  resultMap="userMap">
          select *  from user left outer join user_role on user.id = user_role.uid
           left outer join role on role.id =user_role.rid
    </select>

    <insert id="saveUser" parameterType="cn.itcast.domain.User">
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user (username,sex,birthday,address) values (#{username},#{sex},#{birthday},#{address})
    </insert>

    <update id="update" parameterType="cn.itcast.domain.User">
            update user set username = #{username}, sex = #{sex},address = #{address},birthday = #{birthday} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{id}
    </delete>

    <select id="findById" parameterType="int" resultType="cn.itcast.domain.User">
        select * from user where id = #{id}
    </select>

    <select id="findByName" parameterType="string" resultType="cn.itcast.domain.User">
        select * from user where username like #{username}
    </select>

    <select id="count" resultType="int">
        select count(id) from user
    </select>

    <select id="query" parameterType="cn.itcast.domain.Query" resultType="cn.itcast.domain.User">
        select * from user where username like #{user.username}
    </select>

    <select id="findUserByConditon" parameterType="user" resultMap="userMap">
        select *from user
        <where>
            <if test="username!=null">
                and username like #{username}
            </if>
            <if test="sex!=null">
                and sex = #{sex}
            </if>
        </where>

    </select>

    <select id="findByIds" resultMap="userMap" parameterType="query">
        select *from user
        <where>
            <if test="ids!=null and ids.size()> 0">
                <foreach collection="ids" open="and id in (" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>



</mapper>